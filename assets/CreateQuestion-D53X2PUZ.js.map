{"version":3,"file":"CreateQuestion-D53X2PUZ.js","sources":["../../src/api/questions/postQuestion.ts","../../src/api/questions/updateQuestion.ts","../../src/Widgets/CreateQuestion/CreateQuestion.tsx"],"sourcesContent":["import { instance } from \"../config\"\nimport { z } from \"zod\";\n\nexport const createPostQuestionShema = z.object({\n  title: z.string().min(1, \"Title should be at least 1 characters\"),\n  description: z.string().min(1, \"Description should be at least 1 characters\"),\n});\n\nexport type createPostQuestionForm = z.infer<typeof createPostQuestionShema>;\n\nexport async function postQuestion(data: createPostQuestionForm, code: string): Promise<void> {\n  const dataObj = {...data, attachedCode: code}\n  await instance.post('/questions', dataObj)\n    .catch((err) => {\n      throw new Error(err.response.data.message)\n    })\n}\n","import { instance } from \"../config\"\nimport { createPostQuestionForm } from \"./postQuestion\"\n\nexport async function updateQuestion(data: createPostQuestionForm, code: string, id: string): Promise<void> {\n  const dataObj = {...data, attachedCode: code}\n  await instance.patch(`/questions/${id}`, dataObj)\n    .catch((err) => {\n      throw new Error(err.response.data.message)\n    })\n}\n","import { Button } from \"ui-components_innowise\";\nimport \"./createQuestion.css\";\nimport InputElement from \"../../Shared/InputElement/InputElement\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  createPostQuestionForm,\n  createPostQuestionShema,\n  postQuestion,\n} from \"../../api/questions/postQuestion\";\nimport Loader from \"../../Shared/Loader/Loader\";\nimport ErrorMessageFetch from \"../../Shared/ErrorMessageFetch/ErrorMessageFetch\";\nimport { FC, useState } from \"react\";\nimport { queryCLient } from \"../../api/queryClients\";\nimport { updateQuestion } from \"../../api/questions/updateQuestion\";\nimport CodeEditor from \"../CodeEditor/CodeEditor\";\n\ninterface CreateQuestionProps {\n  newTitle?: string;\n  newDescr?: string;\n  newCode?: string;\n  updateID?: string;\n}\n\nconst CreateQuestion: FC<CreateQuestionProps> = ({\n  newTitle = \"\",\n  newCode = \"\",\n  newDescr = \"\",\n  updateID = \"\",\n}) => {\n  const [code, setCode] = useState(newCode);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<createPostQuestionForm>({\n    resolver: zodResolver(createPostQuestionShema),\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: (data: createPostQuestionForm) =>\n      updateID\n        ? updateQuestion(data, code, updateID)\n        : postQuestion(data, code),\n    onSuccess() {\n      reset();\n      queryCLient.invalidateQueries({ queryKey: [\"questions\"] });\n    },\n  });\n\n  return (\n    <form\n      className=\"ask-form\"\n      onSubmit={handleSubmit((data) => {\n        registerMutation.mutate(data);\n      })}\n    >\n      <InputElement\n        classes=\"ask-form__input\"\n        type=\"text\"\n        placeholder=\"Question title\"\n        inputProp={{ ...register(\"title\") }}\n        errorMessage={errors[\"title\"]?.message}\n        newValue={newTitle}\n      />\n      <InputElement\n        classes=\"ask-form__input\"\n        type=\"text\"\n        placeholder=\"Question description\"\n        inputProp={{ ...register(\"description\") }}\n        errorMessage={errors[\"description\"]?.message}\n        newValue={newDescr}\n      />\n\n      <div className=\"ask-form__body\">\n        <p className=\"ask-form__title\">Attached code:</p>\n        <CodeEditor\n          value={code}\n          setValue={setCode}\n          classes=\"new-snippet__code\"\n          readonly={false}\n        />\n      </div>\n\n      <ErrorMessageFetch mutation={registerMutation} />\n\n      {registerMutation.isSuccess && (\n        <span className=\"register--correct\">\n          Question {updateID ? \"updated\" : \"created\"} successfully!\"\n        </span>\n      )}\n\n      <Button classes=\"ask-form__btn\">\n        {registerMutation.isPending ? <Loader type=\"small\" /> : \"Confirm\"}\n      </Button>\n    </form>\n  );\n};\n\nexport default CreateQuestion;\n"],"names":["createPostQuestionShema","z","postQuestion","data","code","dataObj","instance","err","updateQuestion","id","CreateQuestion","newTitle","newCode","newDescr","updateID","setCode","useState","register","handleSubmit","errors","reset","useForm","zodResolver","registerMutation","useMutation","queryCLient","jsxs","jsx","InputElement","_a","_b","CodeEditor","ErrorMessageFetch","Button","Loader"],"mappings":"+QAGa,MAAAA,EAA0BC,EAAE,OAAO,CAC9C,MAAOA,EAAE,OAAA,EAAS,IAAI,EAAG,uCAAuC,EAChE,YAAaA,EAAE,OAAS,EAAA,IAAI,EAAG,6CAA6C,CAC9E,CAAC,EAIqB,eAAAC,EAAaC,EAA8BC,EAA6B,CAC5F,MAAMC,EAAU,CAAC,GAAGF,EAAM,aAAcC,CAAI,EAC5C,MAAME,EAAS,KAAK,aAAcD,CAAO,EACtC,MAAOE,GAAQ,CACd,MAAM,IAAI,MAAMA,EAAI,SAAS,KAAK,OAAO,CAAA,CAC1C,CACL,CCbsB,eAAAC,EAAeL,EAA8BC,EAAcK,EAA2B,CAC1G,MAAMJ,EAAU,CAAC,GAAGF,EAAM,aAAcC,CAAI,EACtC,MAAAE,EAAS,MAAM,cAAcG,CAAE,GAAIJ,CAAO,EAC7C,MAAOE,GAAQ,CACd,MAAM,IAAI,MAAMA,EAAI,SAAS,KAAK,OAAO,CAAA,CAC1C,CACL,CCgBA,MAAMG,EAA0C,CAAC,CAC/C,SAAAC,EAAW,GACX,QAAAC,EAAU,GACV,SAAAC,EAAW,GACX,SAAAC,EAAW,EACb,IAAM,SACJ,KAAM,CAACV,EAAMW,CAAO,EAAIC,EAAAA,SAASJ,CAAO,EAElC,CACJ,SAAAK,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,EACpB,MAAAC,GACEC,EAAgC,CAClC,SAAUC,EAAYtB,CAAuB,CAAA,CAC9C,EAEKuB,EAAmBC,EAAY,CACnC,WAAarB,GACXW,EACIN,EAAeL,EAAMC,EAAMU,CAAQ,EACnCZ,EAAaC,EAAMC,CAAI,EAC7B,WAAY,CACJgB,EAAA,EACNK,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAW,EAAG,CAAA,CAC3D,CACD,EAGC,OAAAC,EAAA,KAAC,OAAA,CACC,UAAU,WACV,SAAUR,EAAcf,GAAS,CAC/BoB,EAAiB,OAAOpB,CAAI,CAAA,CAC7B,EAED,SAAA,CAAAwB,EAAA,IAACC,EAAA,CACC,QAAQ,kBACR,KAAK,OACL,YAAY,iBACZ,UAAW,CAAE,GAAGX,EAAS,OAAO,CAAE,EAClC,cAAcY,EAAAV,EAAO,QAAP,YAAAU,EAAiB,QAC/B,SAAUlB,CAAA,CACZ,EACAgB,EAAA,IAACC,EAAA,CACC,QAAQ,kBACR,KAAK,OACL,YAAY,uBACZ,UAAW,CAAE,GAAGX,EAAS,aAAa,CAAE,EACxC,cAAca,EAAAX,EAAO,cAAP,YAAAW,EAAuB,QACrC,SAAUjB,CAAA,CACZ,EAEAa,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,kBAAkB,SAAc,iBAAA,EAC7CA,EAAA,IAACI,EAAA,CACC,MAAO3B,EACP,SAAUW,EACV,QAAQ,oBACR,SAAU,EAAA,CAAA,CACZ,EACF,EAEAY,EAAAA,IAACK,EAAkB,CAAA,SAAUT,CAAkB,CAAA,EAE9CA,EAAiB,WACfG,OAAA,OAAA,CAAK,UAAU,oBAAoB,SAAA,CAAA,YACxBZ,EAAW,UAAY,UAAU,iBAAA,EAC7C,EAGFa,EAAAA,IAACM,EAAAA,OAAO,CAAA,QAAQ,gBACb,SAAAV,EAAiB,UAAYI,EAAA,IAACO,EAAO,CAAA,KAAK,OAAQ,CAAA,EAAK,SAC1D,CAAA,CAAA,CAAA,CACF,CAEJ"}