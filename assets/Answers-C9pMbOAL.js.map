{"version":3,"file":"Answers-C9pMbOAL.js","sources":["../../src/Pages/Answers/Answers.tsx"],"sourcesContent":["import { Button } from \"ui-components_innowise\";\nimport \"./answers.css\";\nimport Question from \"../../Shared/Question/Question\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getOneQuestion } from \"../../api/questions/getOneQuestion\";\nimport useLastIdLocation from \"../../hooks/useLastIdLocation\";\nimport Loader from \"../../Shared/Loader/Loader\";\nimport { useState } from \"react\";\nimport NewComment from \"../../Widgets/NewComment/NewComment\";\nimport Comment from \"../../Shared/Comment/Comment\";\nimport { useNavigate } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\n\nconst Answers = () => {\n  const [status, setStatus] = useState(false);\n  const id = useLastIdLocation();\n  const navigation = useNavigate();\n  const userId = useSelector((state: RootState) => state.userState.id);\n\n  const { error, isError, isSuccess, data, isPending } = useQuery({\n    queryFn: () => getOneQuestion(id),\n    queryKey: [`/questions/${id}`],\n    retry: 1,\n  });\n\n  if (isPending) {\n    return <Loader type=\"big\" />;\n  }\n\n  return (\n    <section className=\"answers-page\">\n      <div className=\"answers-page-btn__wrapper\">\n        <Button\n          onClick={() => setStatus(true)}\n          classes=\"edit-snippet addcomment-snippet\"\n        >\n          Add answer\n        </Button>\n        {userId === data?.user.id && (\n          <Button\n            onClick={() => navigation(`/questions/${id}`)}\n            classes=\"edit-snippet addcomment-snippet\"\n          >\n            Edit question\n          </Button>\n        )}\n      </div>\n\n      {isError && (\n        <div>\n          <span className=\"error\">Error: {error.message}</span>\n        </div>\n      )}\n\n      {isSuccess && (\n        <div className=\"answers-page__question\">\n          <Question dataObj={data} />\n        </div>\n      )}\n\n      {isSuccess && (\n        <ul className=\"answers-list\">\n          {status && <NewComment setStatus={setStatus} answerId={id} />}\n          {data?.answers?.reverse().map((elem) => (\n            <Comment key={elem.id} comment={elem} />\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n};\n\nexport default Answers;\n"],"names":["Answers","status","setStatus","useState","id","useLastIdLocation","navigation","useNavigate","userId","useSelector","state","error","isError","isSuccess","data","isPending","useQuery","getOneQuestion","jsx","Loader","jsxs","Button","Question","NewComment","_a","elem","Comment"],"mappings":"4cAcA,MAAMA,EAAU,IAAM,OACpB,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAS,EAAK,EACpCC,EAAKC,EAAkB,EACvBC,EAAaC,EAAY,EACzBC,EAASC,EAAaC,GAAqBA,EAAM,UAAU,EAAE,EAE7D,CAAE,MAAAC,EAAO,QAAAC,EAAS,UAAAC,EAAW,KAAAC,EAAM,UAAAC,GAAcC,EAAS,CAC9D,QAAS,IAAMC,EAAeb,CAAE,EAChC,SAAU,CAAC,cAAcA,CAAE,EAAE,EAC7B,MAAO,CAAA,CACR,EAED,OAAIW,EACKG,EAAA,IAACC,EAAO,CAAA,KAAK,KAAM,CAAA,EAI1BC,EAAA,KAAC,UAAQ,CAAA,UAAU,eACjB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAF,EAAA,IAACG,EAAA,OAAA,CACC,QAAS,IAAMnB,EAAU,EAAI,EAC7B,QAAQ,kCACT,SAAA,YAAA,CAED,EACCM,KAAWM,GAAA,YAAAA,EAAM,KAAK,KACrBI,EAAA,IAACG,EAAA,OAAA,CACC,QAAS,IAAMf,EAAW,cAAcF,CAAE,EAAE,EAC5C,QAAQ,kCACT,SAAA,eAAA,CAAA,CAED,EAEJ,EAECQ,GACEM,EAAAA,IAAA,MAAA,CACC,SAACE,OAAA,OAAA,CAAK,UAAU,QAAQ,SAAA,CAAA,UAAQT,EAAM,OAAA,CAAA,CAAQ,CAChD,CAAA,EAGDE,SACE,MAAI,CAAA,UAAU,yBACb,SAACK,EAAA,IAAAI,EAAA,CAAS,QAASR,CAAA,CAAM,CAC3B,CAAA,EAGDD,GACCO,EAAA,KAAC,KAAG,CAAA,UAAU,eACX,SAAA,CAAAnB,GAAWiB,EAAA,IAAAK,EAAA,CAAW,UAAArB,EAAsB,SAAUE,EAAI,GAC1DoB,EAAAV,GAAA,YAAAA,EAAM,UAAN,YAAAU,EAAe,UAAU,IAAKC,GAC7BP,MAACQ,EAAsB,CAAA,QAASD,CAAlB,EAAAA,EAAK,EAAmB,EACvC,CACH,CAAA,CAAA,EAEJ,CAEJ"}