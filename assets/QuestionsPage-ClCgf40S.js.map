{"version":3,"file":"QuestionsPage-ClCgf40S.js","sources":["../../src/Widgets/AllQuestions/AllQuestions.tsx","../../src/api/questions/getAllQuestions.ts","../../src/Pages/QuestionsPage/QuestionsPage.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport Question from \"../../Shared/Question/Question\";\nimport \"./allQuestions.css\";\nimport { AllQuestionsArr } from \"../../api/questions/getAllQuestions\";\n\ninterface AllQuestionsProps {\n  dataObj: AllQuestionsArr;\n  classes?: string;\n}\n\nconst AllQuestions: FC<AllQuestionsProps> = ({ dataObj, classes = \"\" }) => {\n  return (\n    <ul className={`question-list ${classes}`}>\n      {dataObj.map((elem) => (\n        <li key={elem.id} className=\"questions-list__item\">\n          <Question dataObj={elem} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default AllQuestions;\n","import { instance } from \"../../api/config\";\nimport { userType } from \"../auth/authLogin\";\nimport { Links, Meta, PageNumber } from \"../users/allUsersFetch\";\n\nexport type AllQuestionsObject = {\n  data: AllQuestionsArr,\n  links: Links,\n  meta: Meta\n}\n\nexport type AllQuestionsArr = Array<OneQuestion>\n\nexport type OneAnswer = {\n  id: string,\n  content: string,\n  isCorrect: false,\n  user: userType\n}\n\nexport type AnswersArray = Array<OneAnswer>\n\nexport type OneQuestion = {\n  answers: AnswersArray,\n  attachedCode: string,\n  description: string,\n  id: string,\n  isResolved: boolean,\n  title: string\n  user: userType\n}\n\nexport async function getAllQuestions(page:PageNumber = '1'):Promise<AllQuestionsObject> {\n return (await instance.get(`/questions?page=${page}`)\n  .catch((err) => {\n      throw new Error(err.response.data.message)\n    })\n  ).data.data\n}\n","import { Button } from \"ui-components_innowise\";\nimport AllQuestions from \"../../Widgets/AllQuestions/AllQuestions\";\nimport Pagination from \"../../Widgets/Pagination/Pagination\";\nimport \"./questionsPage.css\";\nimport { useNavigate, useSearchParams } from \"react-router\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Loader from \"../../Shared/Loader/Loader\";\nimport { useState } from \"react\";\nimport DotsLoader from \"../../Shared/DotsLoader/DotsLoader\";\nimport HeaderSection from \"../../Widgets/HeaderSection/HeaderSection\";\nimport { getAllQuestions } from \"../../api/questions/getAllQuestions\";\nimport usePages from \"../../hooks/usePages\";\n\nconst QuestionsPage = () => {\n  const [params] = useSearchParams();\n  const [page, setPage] = useState(params.get(\"page\") || \"1\");\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(\"/questions/new\");\n  };\n\n  const { error, isError, isSuccess, isPending, data, refetch, isFetching } =\n    useQuery({\n      queryFn: () => getAllQuestions(page),\n      queryKey: [\"questions\"],\n      enabled: false,\n    });\n\n  usePages({ page, setPage, refetch });\n\n  if (isPending) {\n    return <Loader type=\"big\" />;\n  }\n\n  return (\n    <>\n      <HeaderSection title={\"All Questions\"} />\n      <Pagination\n        currentPage={page}\n        setPage={setPage}\n        maxPage={data?.meta.totalPages}\n      />\n\n      {isFetching && <DotsLoader />}\n\n      <Button onClick={handleClick} classes=\"ask-question\">\n        Ask question\n      </Button>\n\n      {isError && (\n        <div>\n          <span className=\"error\">Error: {error.message}</span>\n        </div>\n      )}\n      {isSuccess && (\n        <AllQuestions\n          dataObj={data.data}\n          classes={isFetching ? \"snippet-list__load\" : \"\"}\n        />\n      )}\n    </>\n  );\n};\n\nexport default QuestionsPage;\n"],"names":["AllQuestions","dataObj","classes","jsx","elem","Question","getAllQuestions","page","instance","err","QuestionsPage","params","useSearchParams","setPage","useState","navigate","useNavigate","handleClick","error","isError","isSuccess","isPending","data","refetch","isFetching","useQuery","usePages","Loader","jsxs","Fragment","HeaderSection","Pagination","DotsLoader","Button"],"mappings":"8QAUA,MAAMA,EAAsC,CAAC,CAAE,QAAAC,EAAS,QAAAC,EAAU,MAE9DC,EAAA,IAAC,MAAG,UAAW,iBAAiBD,CAAO,GACpC,SAAAD,EAAQ,IAAKG,GACZD,EAAA,IAAC,MAAiB,UAAU,uBAC1B,eAACE,EAAS,CAAA,QAASD,CAAM,CAAA,CADlB,EAAAA,EAAK,EAEd,CACD,CACH,CAAA,ECakB,eAAAE,EAAgBC,EAAkB,IAAiC,CAChF,OAAA,MAAMC,EAAS,IAAI,mBAAmBD,CAAI,EAAE,EAClD,MAAOE,GAAQ,CACZ,MAAM,IAAI,MAAMA,EAAI,SAAS,KAAK,OAAO,CAAA,CAC1C,GACD,KAAK,IACT,CCxBA,MAAMC,EAAgB,IAAM,CACpB,KAAA,CAACC,CAAM,EAAIC,EAAgB,EAC3B,CAACL,EAAMM,CAAO,EAAIC,EAAAA,SAASH,EAAO,IAAI,MAAM,GAAK,GAAG,EACpDI,EAAWC,EAAY,EAEvBC,EAAc,IAAM,CACxBF,EAAS,gBAAgB,CAC3B,EAEM,CAAE,MAAAG,EAAO,QAAAC,EAAS,UAAAC,EAAW,UAAAC,EAAW,KAAAC,EAAM,QAAAC,EAAS,WAAAC,CAAW,EACtEC,EAAS,CACP,QAAS,IAAMnB,EAAgBC,CAAI,EACnC,SAAU,CAAC,WAAW,EACtB,QAAS,EAAA,CACV,EAIH,OAFAmB,EAAS,CAAE,KAAAnB,EAAM,QAAAM,EAAS,QAAAU,CAAA,CAAS,EAE/BF,EACKlB,EAAA,IAACwB,EAAO,CAAA,KAAK,KAAM,CAAA,EAKxBC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAC1B,EAAAA,IAAA2B,EAAA,CAAc,MAAO,eAAiB,CAAA,EACvC3B,EAAA,IAAC4B,EAAA,CACC,YAAaxB,EACb,QAAAM,EACA,QAASS,GAAA,YAAAA,EAAM,KAAK,UAAA,CACtB,EAECE,SAAeQ,EAAW,EAAA,QAE1BC,EAAAA,OAAO,CAAA,QAAShB,EAAa,QAAQ,eAAe,SAErD,eAAA,EAECE,GACEhB,EAAAA,IAAA,MAAA,CACC,SAACyB,OAAA,OAAA,CAAK,UAAU,QAAQ,SAAA,CAAA,UAAQV,EAAM,OAAA,CAAA,CAAQ,CAChD,CAAA,EAEDE,GACCjB,EAAA,IAACH,EAAA,CACC,QAASsB,EAAK,KACd,QAASE,EAAa,qBAAuB,EAAA,CAAA,CAC/C,EAEJ,CAEJ"}