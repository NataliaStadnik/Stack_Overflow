{"version":3,"file":"NewSnippet-NkjXcmec.js","sources":["../../src/Widgets/NewSnippet/makeSelectArray.ts","../../src/api/snippets/updateSnippet.ts","../../src/api/snippets/postNewSnippet.ts","../../src/api/snippets/getLanguages.ts","../../src/Widgets/NewSnippet/NewSnippet.tsx"],"sourcesContent":["import { Languages } from \"../../api/snippets/getLanguages\";\n\ntype SelectObject = Array<{\n  value: string;\n  label: string;\n}>;\n\nexport function makeSelectArray(languages: Languages) {\n  const options: SelectObject = [];\n  languages.map((elem) => {\n    options.push({ value: elem, label: elem });\n  });\n  return options;\n}\n","import { instance } from \"../config\"\nimport { createNewSnippetForm } from \"./postNewSnippet\"\n\nexport async function updateSnippet(data: createNewSnippetForm, id:string) {\n  await instance.patch(`/snippets/${id}`, data)\n  .catch((err) => {\n      throw new Error(err.response.data.message)\n    })\n}\n","import { instance } from \"../config\"\n\nexport type createNewSnippetForm = {\n  code: string,\n  language: string\n}\n\nexport async function postNewSnippet(data: createNewSnippetForm) {\n  await instance.post('/snippets', data)\n  .catch((err) => {\n      throw new Error(err.response.data.message)\n    })\n}\n","import { instance } from \"../config\"\n\nexport type Languages = Array<string>;\n\nexport async function getLanguages(): Promise<Languages> {\n  return (await instance.get(`/snippets/languages`)\n    .catch((err) => {\n        throw new Error(err.response.data.message)\n      })).data.data\n}\n","import { Button, Select } from \"ui-components_innowise\";\nimport \"./newSnippet.css\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport Loader from \"../../Shared/Loader/Loader\";\nimport { makeSelectArray } from \"./makeSelectArray\";\nimport ErrorMessageFetch from \"../../Shared/ErrorMessageFetch/ErrorMessageFetch\";\nimport { FC, useState } from \"react\";\nimport { updateSnippet } from \"../../api/snippets/updateSnippet\";\nimport { postNewSnippet } from \"../../api/snippets/postNewSnippet\";\nimport { getLanguages } from \"../../api/snippets/getLanguages\";\nimport { queryCLient } from \"../../api/queryClients\";\nimport useLastIdLocation from \"../../hooks/useLastIdLocation\";\nimport CodeEditor from \"../CodeEditor/CodeEditor\";\n\ninterface NewSnippetProps {\n  values?: string;\n  selects?: string;\n  update?: boolean;\n  snippetID?: string;\n}\n\nconst NewSnippet: FC<NewSnippetProps> = ({\n  values = \"\",\n  selects = \"\",\n  update = false,\n  snippetID = \"\",\n}) => {\n  const id = useLastIdLocation();\n  const [select, setSelect] = useState(values);\n  const [value, setValue] = useState(selects);\n\n  const registerMutation = useMutation({\n    mutationFn: () =>\n      update\n        ? updateSnippet({ code: value, language: select }, snippetID)\n        : postNewSnippet({ code: value, language: select }),\n    onSuccess() {\n      setValue(\"\");\n      queryCLient.invalidateQueries({\n        queryKey: [`snippets/${id}}`],\n      });\n    },\n  });\n\n  const { error, isError, isSuccess, data, isPending } = useQuery({\n    queryFn: () => getLanguages(),\n    queryKey: [\"snippets/languages\"],\n    retry: 1,\n  });\n\n  if (isPending) {\n    return <Loader type=\"big\" />;\n  }\n\n  return (\n    <form\n      className=\"snippet-form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        registerMutation.mutate();\n      }}\n    >\n      {isError && (\n        <div>\n          <span className=\"error\">Error: {error.message}</span>\n        </div>\n      )}\n\n      <div className=\"new-snippet\">\n        <h3 className=\"new-snippet__title\">Language of your snippet:</h3>\n        {isSuccess && (\n          <Select\n            selectedItem={select}\n            onChange={setSelect}\n            classes=\"new-wrap\"\n            label=\"Select language\"\n            required\n            options={makeSelectArray(data)}\n          />\n        )}\n      </div>\n\n      <div className=\"new-snippet new-snippet__body\">\n        <h3 className=\"new-snippet__title code-title\">Code of your snippet:</h3>\n        <CodeEditor\n          value={value}\n          setValue={setValue}\n          classes=\"new-snippet__code\"\n          language={select}\n          readonly={false}\n        />\n\n        {registerMutation.isSuccess && (\n          <span className=\"register--correct\">\n            Snippet {update ? \"updated\" : \"created\"} successfully!\"\n          </span>\n        )}\n\n        <ErrorMessageFetch mutation={registerMutation} />\n      </div>\n      <Button classes=\"new-snippet__btn\">\n        {registerMutation.isPending ? (\n          <Loader type=\"small\" />\n        ) : update ? (\n          \"Update snippet\"\n        ) : (\n          \"Create snippet\"\n        )}\n      </Button>\n    </form>\n  );\n};\n\nexport default NewSnippet;\n"],"names":["makeSelectArray","languages","options","elem","updateSnippet","data","id","instance","err","postNewSnippet","getLanguages","NewSnippet","values","selects","update","snippetID","useLastIdLocation","select","setSelect","useState","value","setValue","registerMutation","useMutation","queryCLient","error","isError","isSuccess","isPending","useQuery","jsx","Loader","jsxs","e","Select","CodeEditor","ErrorMessageFetch","Button"],"mappings":"8OAOO,SAASA,EAAgBC,EAAsB,CACpD,MAAMC,EAAwB,CAAC,EACrB,OAAAD,EAAA,IAAKE,GAAS,CACtBD,EAAQ,KAAK,CAAE,MAAOC,EAAM,MAAOA,EAAM,CAAA,CAC1C,EACMD,CACT,CCVsB,eAAAE,EAAcC,EAA4BC,EAAW,CACnE,MAAAC,EAAS,MAAM,aAAaD,CAAE,GAAID,CAAI,EAC3C,MAAOG,GAAQ,CACZ,MAAM,IAAI,MAAMA,EAAI,SAAS,KAAK,OAAO,CAAA,CAC1C,CACL,CCDA,eAAsBC,EAAeJ,EAA4B,CAC/D,MAAME,EAAS,KAAK,YAAaF,CAAI,EACpC,MAAOG,GAAQ,CACZ,MAAM,IAAI,MAAMA,EAAI,SAAS,KAAK,OAAO,CAAA,CAC1C,CACL,CCRA,eAAsBE,GAAmC,CACvD,OAAQ,MAAMH,EAAS,IAAI,qBAAqB,EAC7C,MAAOC,GAAQ,CACZ,MAAM,IAAI,MAAMA,EAAI,SAAS,KAAK,OAAO,CAAA,CAC1C,GAAG,KAAK,IACf,CCYA,MAAMG,EAAkC,CAAC,CACvC,OAAAC,EAAS,GACT,QAAAC,EAAU,GACV,OAAAC,EAAS,GACT,UAAAC,EAAY,EACd,IAAM,CACJ,MAAMT,EAAKU,EAAkB,EACvB,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAASP,CAAM,EACrC,CAACQ,EAAOC,CAAQ,EAAIF,EAAAA,SAASN,CAAO,EAEpCS,EAAmBC,EAAY,CACnC,WAAY,IACVT,EACIV,EAAc,CAAE,KAAMgB,EAAO,SAAUH,CAAU,EAAAF,CAAS,EAC1DN,EAAe,CAAE,KAAMW,EAAO,SAAUH,EAAQ,EACtD,WAAY,CACVI,EAAS,EAAE,EACXG,EAAY,kBAAkB,CAC5B,SAAU,CAAC,YAAYlB,CAAE,GAAG,CAAA,CAC7B,CAAA,CACH,CACD,EAEK,CAAE,MAAAmB,EAAO,QAAAC,EAAS,UAAAC,EAAW,KAAAtB,EAAM,UAAAuB,GAAcC,EAAS,CAC9D,QAAS,IAAMnB,EAAa,EAC5B,SAAU,CAAC,oBAAoB,EAC/B,MAAO,CAAA,CACR,EAED,OAAIkB,EACKE,EAAA,IAACC,EAAO,CAAA,KAAK,KAAM,CAAA,EAI1BC,EAAA,KAAC,OAAA,CACC,UAAU,eACV,SAAWC,GAAM,CACfA,EAAE,eAAe,EACjBX,EAAiB,OAAO,CAC1B,EAEC,SAAA,CAAAI,GACEI,EAAAA,IAAA,MAAA,CACC,SAACE,OAAA,OAAA,CAAK,UAAU,QAAQ,SAAA,CAAA,UAAQP,EAAM,OAAA,CAAA,CAAQ,CAChD,CAAA,EAGFO,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAyB,4BAAA,EAC3DH,GACCG,EAAA,IAACI,EAAA,OAAA,CACC,aAAcjB,EACd,SAAUC,EACV,QAAQ,WACR,MAAM,kBACN,SAAQ,GACR,QAASlB,EAAgBK,CAAI,CAAA,CAAA,CAC/B,EAEJ,EAEA2B,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACb,SAAA,CAACF,EAAA,IAAA,KAAA,CAAG,UAAU,gCAAgC,SAAqB,wBAAA,EACnEA,EAAA,IAACK,EAAA,CACC,MAAAf,EACA,SAAAC,EACA,QAAQ,oBACR,SAAUJ,EACV,SAAU,EAAA,CACZ,EAECK,EAAiB,WACfU,OAAA,OAAA,CAAK,UAAU,oBAAoB,SAAA,CAAA,WACzBlB,EAAS,UAAY,UAAU,iBAAA,EAC1C,EAGFgB,EAAAA,IAACM,EAAkB,CAAA,SAAUd,CAAkB,CAAA,CAAA,EACjD,EACCQ,EAAA,IAAAO,EAAA,OAAA,CAAO,QAAQ,mBACb,SAAiBf,EAAA,UACfQ,EAAA,IAAAC,EAAA,CAAO,KAAK,OAAA,CAAQ,EACnBjB,EACF,iBAEA,gBAEJ,CAAA,CAAA,CAAA,CACF,CAEJ"}