{"version":3,"file":"Modal-BrXD7VC8.js","sources":["../../src/api/auth/registerUser.ts","../../src/Widgets/Register/registerElementArr.tsx","../../src/Widgets/Register/Register.tsx","../../src/Widgets/Login/Login.tsx","../../src/Pages/Modal/Modal.tsx"],"sourcesContent":["import { z } from \"zod\";\nimport { instance } from \"../config\";\n\nexport const createRegisterShema = z.object({\n  username: z.string().min(5, \"Username should be at least 5 characters\"),\n  password: z.string().regex(\n      /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{6,}$/,\n      \"Password must contain at least one lowercase letter, one uppercase letter, one number and one symbol\"\n    ),\n  confirm: z.string().min(6, \"Password should be at least 6 characters\"),\n})\n  .refine((data) => data.password === data.confirm, {\n      message: \"The passwords don't match\",\n      path: ['confirm']\n  })\n\n\nexport type createRegisterForm = z.infer<typeof createRegisterShema>;\n\nexport async function registerUser(data: createRegisterForm): Promise<void> {\n  const postData = Object.fromEntries(Object.entries(data).filter(([key]) => key !== 'confirm'));\n  await instance.post(`/register`, postData)\n    .catch((err) => {\n      throw new Error(err.response.data.message)\n    })\n}\n","import Key from \"../../svg/Key\";\nimport { loginElementArr } from \"../Login/loginElementArr\";\nimport { createRegisterForm } from \"../../api/auth/registerUser\";\n\nexport type RegisterFields = keyof createRegisterForm;\n\nexport interface ElementProps<T> {\n  id: number;\n  svg: JSX.Element;\n  placeholder: string;\n  type: string;\n  name: T;\n}\n\nexport const registerElementArr: Array<ElementProps<RegisterFields>> = [\n  ...loginElementArr,\n  {\n    id: 3,\n    svg: <Key />,\n    placeholder: \"Confirm password\",\n    type: \"password\",\n    name: \"confirm\",\n  },\n];\n","import { Link, useNavigate } from \"react-router\";\nimport { Button } from \"ui-components_innowise\";\nimport InputElement from \"../../Shared/InputElement/InputElement\";\nimport \"./register.css\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport {\n  createRegisterForm,\n  createRegisterShema,\n  registerUser,\n} from \"../../api/auth/registerUser\";\nimport Loader from \"../../Shared/Loader/Loader\";\nimport { registerElementArr } from \"./registerElementArr\";\nimport ErrorMessageFetch from \"../../Shared/ErrorMessageFetch/ErrorMessageFetch\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<createRegisterForm>({\n    resolver: zodResolver(createRegisterShema),\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: registerUser,\n    onSuccess() {\n      reset();\n      navigate(\"/login\");\n    },\n  });\n\n  return (\n    <div className=\"modal\">\n      <h2 className=\"title\">Sign up to Codelang</h2>\n      <form\n        className=\"modal-form\"\n        onSubmit={handleSubmit((data) => {\n          registerMutation.mutate(data);\n        })}\n      >\n        {registerElementArr.map((elem) => (\n          <InputElement\n            key={elem.id}\n            svg={elem.svg}\n            placeholder={elem.placeholder}\n            type={elem.type}\n            inputProp={{ ...register(elem.name) }}\n            errorMessage={errors[elem.name]?.message}\n          />\n        ))}\n\n        <ErrorMessageFetch mutation={registerMutation} />\n\n        <Button classes=\"btn-confirm\">\n          {registerMutation.isPending ? <Loader type=\"small\" /> : \"Confirm\"}\n        </Button>\n      </form>\n\n      <div className=\"sign\">\n        <p className=\"sign__text\">Already have an account?</p>\n        <Link className=\"sign__link\" to={\"/login\"}>\n          Sign in\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import { Link, useNavigate } from \"react-router\";\nimport { Button } from \"ui-components_innowise\";\nimport InputElement from \"../../Shared/InputElement/InputElement\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport Loader from \"../../Shared/Loader/Loader\";\nimport { useDispatch } from \"react-redux\";\nimport { setAuthTrue } from \"../../store/authSlice\";\nimport { loginElementArr } from \"./loginElementArr\";\nimport ErrorMessageFetch from \"../../Shared/ErrorMessageFetch/ErrorMessageFetch\";\nimport { setUserInfo } from \"../../store/userSlice\";\nimport {\n  authLogin,\n  createLoginForm,\n  createLoginShema,\n} from \"../../api/auth/authLogin\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<createLoginForm>({\n    resolver: zodResolver(createLoginShema),\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: authLogin,\n    onSuccess(data) {\n      dispatch(setAuthTrue());\n      reset();\n      dispatch(setUserInfo(data));\n      navigate(\"/\");\n    },\n  });\n\n  return (\n    <div className=\"modal\">\n      <h2 className=\"title\">Sign in to Codelang</h2>\n      <form\n        className=\"modal-form\"\n        onSubmit={handleSubmit((data) => {\n          registerMutation.mutate(data);\n        })}\n      >\n        {loginElementArr.map((elem) => (\n          <InputElement\n            key={elem.id}\n            svg={elem.svg}\n            placeholder={elem.placeholder}\n            type={elem.type}\n            inputProp={{ ...register(elem.name) }}\n            errorMessage={errors[elem.name]?.message}\n          />\n        ))}\n\n        <ErrorMessageFetch mutation={registerMutation} />\n\n        <Button classes=\"btn-confirm\">\n          {registerMutation.isPending ? <Loader type=\"small\" /> : \"Confirm\"}\n        </Button>\n      </form>\n\n      <div className=\"sign\">\n        <Link className=\"sign__link\" to={\"/register\"}>\n          Create an account\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { FC } from \"react\";\nimport IconButton from \"../../Shared/IconButton/IconButton\";\nimport Close from \"../../svg/Close\";\nimport Register from \"../../Widgets/Register/Register\";\nimport \"./modal.css\";\nimport { createPortal } from \"react-dom\";\nimport Login from \"../../Widgets/Login/Login\";\nimport { useNavigate } from \"react-router\";\n\ninterface ModalProps {\n  type: string;\n}\n\nconst Modal: FC<ModalProps> = ({ type }) => {\n  const navigate = useNavigate();\n\n  const handleClose = (e: React.MouseEvent<HTMLDivElement>) => {\n    if ((e.target as HTMLElement).id === \"backdrop\") {\n      navigate(\"/\");\n    }\n  };\n\n  return createPortal(\n    <div id=\"backdrop\" className=\"backdrop\" onClick={(e) => handleClose(e)}>\n      <div className=\"modal-wrapper\">\n        <IconButton\n          classes=\"close-btn\"\n          svg={<Close classes=\"close-modal-svg\" />}\n          onClick={() => navigate(\"/\")}\n        />\n        {type === \"register\" ? <Register /> : <Login />}\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default Modal;\n"],"names":["createRegisterShema","z","data","registerUser","postData","key","instance","err","registerElementArr","loginElementArr","Key","Register","navigate","useNavigate","register","handleSubmit","errors","reset","useForm","zodResolver","registerMutation","useMutation","jsxs","jsx","elem","InputElement","_a","ErrorMessageFetch","Button","Loader","Link","Login","dispatch","useDispatch","createLoginShema","authLogin","setAuthTrue","setUserInfo","Modal","type","handleClose","e","createPortal","IconButton","Close"],"mappings":"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"}